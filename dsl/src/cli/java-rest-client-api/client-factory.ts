import { 
    CompositeGeneratorNode, 
    NL, 
    toString 
} from "langium/generate";

import { 
    Artifact, 
    ArtifactGenerationConfig 
} from "../artifact-generator.js";
import { 
    JavaRestClientAPIGeneratorConfig, 
    toPath 
} from "../java-gen-utils.js";
import { 
    toFirstUpper 
} from "../util.js";

export function generateFactory(generatorConfig: ArtifactGenerationConfig, artifactConfig: JavaRestClientAPIGeneratorConfig): Artifact {
    const packageName = `${artifactConfig.rootPackageName}.spi`;

    const node = new CompositeGeneratorNode()
    node.append('// Generated by RSD - Do not modify',NL)
    node.append(`package ${packageName};`, NL, NL)
    node.append(`public interface ${toFirstUpper(generatorConfig.name)}ClientFactory {`,NL)
    node.indent( child => {
        child.append(`public ${artifactConfig.rootPackageName}.${toFirstUpper(generatorConfig.name)}Client create(java.net.URI uri);`,NL);
    })
    node.append('}',NL)
    return {
        name: `${toFirstUpper(generatorConfig.name)}ClientFactory.java`,
        content: toString(node),
        path: toPath(artifactConfig.targetFolder, packageName)
    }
}
