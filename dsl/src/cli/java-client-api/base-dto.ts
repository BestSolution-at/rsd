import { CompositeGeneratorNode, NL, toString } from "langium/generate";

import { Artifact } from "../artifact-generator.js";
import { JavaClientAPIGeneratorConfig, toPath } from "../java-gen-utils.js";

export function generateBaseDTO(artifactConfig: JavaClientAPIGeneratorConfig): Artifact {
    const packageName = `${artifactConfig.rootPackageName}.dto`;
    const node = new CompositeGeneratorNode()
    node.append('// Generated by RSD - Do not modify',NL)
    node.append(`package ${packageName};`, NL, NL)
    node.append(`public interface BaseDTO {`,NL)
    node.indent( child => {
        child.append(`public interface Builder {`, NL)
        child.indent( body => {
            body.append('public BaseDTO build();',NL)
        });
        child.append('}',NL)
    });
    node.append('}',NL)
    return {
        name: 'BaseDTO.java',
        content: toString(node),
        path: toPath(artifactConfig.targetFolder, packageName)
    }
}
