// Generated by RSD - Do not modify
import { checkOptProp, createTypedArrayGuard, isBoolean, isNumber, isRecord, isString, propListValue } from '../_type-utils.js';

export type SimpleRecord_Basic_List_Optional = {
	readonly valueBoolean?: boolean[];
	readonly valueShort?: number[];
	readonly valueInt?: number[];
	readonly valueLong?: number[];
	readonly valueFloat?: number[];
	readonly valueDouble?: number[];
	readonly valueString?: string[];
	readonly valueLocalDate?: string[];
	readonly valueLocalDateTime?: string[];
	readonly valueZonedDateTime?: string[];
};

export function isSimpleRecord_Basic_List_Optional(value: unknown): value is SimpleRecord_Basic_List_Optional {
	return isRecord(value) &&
		checkOptProp(value, 'valueBoolean', createTypedArrayGuard(isBoolean)) &&
		checkOptProp(value, 'valueShort', createTypedArrayGuard(isNumber)) &&
		checkOptProp(value, 'valueInt', createTypedArrayGuard(isNumber)) &&
		checkOptProp(value, 'valueLong', createTypedArrayGuard(isNumber)) &&
		checkOptProp(value, 'valueFloat', createTypedArrayGuard(isNumber)) &&
		checkOptProp(value, 'valueDouble', createTypedArrayGuard(isNumber)) &&
		checkOptProp(value, 'valueString', createTypedArrayGuard(isString)) &&
		checkOptProp(value, 'valueLocalDate', createTypedArrayGuard(isString)) &&
		checkOptProp(value, 'valueLocalDateTime', createTypedArrayGuard(isString)) &&
		checkOptProp(value, 'valueZonedDateTime', createTypedArrayGuard(isString));
}

export function SimpleRecord_Basic_List_OptionalFromJSON($value: Record<string, unknown>): SimpleRecord_Basic_List_Optional {
	const valueBoolean = propListValue('valueBoolean', $value, isBoolean, 'optional');
	const valueShort = propListValue('valueShort', $value, isNumber, 'optional');
	const valueInt = propListValue('valueInt', $value, isNumber, 'optional');
	const valueLong = propListValue('valueLong', $value, isNumber, 'optional');
	const valueFloat = propListValue('valueFloat', $value, isNumber, 'optional');
	const valueDouble = propListValue('valueDouble', $value, isNumber, 'optional');
	const valueString = propListValue('valueString', $value, isString, 'optional');
	const valueLocalDate = propListValue('valueLocalDate', $value, isString, 'optional');
	const valueLocalDateTime = propListValue('valueLocalDateTime', $value, isString, 'optional');
	const valueZonedDateTime = propListValue('valueZonedDateTime', $value, isString, 'optional');
	return {
		valueBoolean,
		valueShort,
		valueInt,
		valueLong,
		valueFloat,
		valueDouble,
		valueString,
		valueLocalDate,
		valueLocalDateTime,
		valueZonedDateTime,
	};
}

export function SimpleRecord_Basic_List_OptionalToJSON($value: SimpleRecord_Basic_List_Optional): Record<string, unknown> {
	const valueBoolean = $value.valueBoolean;
	const valueShort = $value.valueShort;
	const valueInt = $value.valueInt;
	const valueLong = $value.valueLong;
	const valueFloat = $value.valueFloat;
	const valueDouble = $value.valueDouble;
	const valueString = $value.valueString;
	const valueLocalDate = $value.valueLocalDate;
	const valueLocalDateTime = $value.valueLocalDateTime;
	const valueZonedDateTime = $value.valueZonedDateTime;

	return {
		valueBoolean,
		valueShort,
		valueInt,
		valueLong,
		valueFloat,
		valueDouble,
		valueString,
		valueLocalDate,
		valueLocalDateTime,
		valueZonedDateTime,
	};
}

