// Generated by RSD - Do not modify
import { checkProp, createIsStringTypeGuard, isRecord, isString, propValue } from '../_type-utils.js';

export type UnionA = {
	'@type': 'union-a';
	readonly shared: string;
	readonly valueA: string;
};

export function isUnionA(value: unknown): value is UnionA {
	return isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('union-a')) &&
		checkProp(value, 'shared', isString) &&
		checkProp(value, 'valueA', isString);
}

export function UnionAFromJSON($value: Record<string, unknown>): UnionA {
	const shared = propValue('shared', $value, isString);
	const valueA = propValue('valueA', $value, isString);
	return {
		'@type': 'union-a',
		shared,
		valueA,
	};
}

export function UnionAToJSON($value: UnionA): Record<string, unknown> {
	const shared = $value.shared;
	const valueA = $value.valueA;

	return {
		'@type': 'union-a',
		shared,
		valueA,
	};
}

