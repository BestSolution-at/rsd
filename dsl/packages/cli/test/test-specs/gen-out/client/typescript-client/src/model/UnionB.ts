// Generated by RSD - Do not modify
import { checkProp, createIsStringTypeGuard, isRecord, isString, propValue } from '../_type-utils.js';

export type UnionB = {
	'@type': 'union-b';
	readonly shared: string;
	readonly valueB: string;
};

export function isUnionB(value: unknown): value is UnionB {
	return isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('union-b')) &&
		checkProp(value, 'shared', isString) &&
		checkProp(value, 'valueB', isString);
}

export function UnionBFromJSON($value: Record<string, unknown>): UnionB {
	const shared = propValue('shared', $value, isString);
	const valueB = propValue('valueB', $value, isString);
	return {
		'@type': 'union-b',
		shared,
		valueB,
	};
}

export function UnionBToJSON($value: UnionB): Record<string, unknown> {
	const shared = $value.shared;
	const valueB = $value.valueB;

	return {
		'@type': 'union-b',
		shared,
		valueB,
	};
}

