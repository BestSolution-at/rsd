// Generated by RSD - Do not modify
import { checkProp, createTypedArrayGuard, isBoolean, isNull, isNumber, isRecord, isString, propListValue } from '../_type-utils.js';

export type SimpleRecord_Basic_List_Null = {
	readonly valueBoolean: boolean[] | null;
	readonly valueShort: number[] | null;
	readonly valueInt: number[] | null;
	readonly valueLong: number[] | null;
	readonly valueFloat: number[] | null;
	readonly valueDouble: number[] | null;
	readonly valueString: string[] | null;
	readonly valueLocalDate: string[] | null;
	readonly valueLocalDateTime: string[] | null;
	readonly valueZonedDateTime: string[] | null;
};

export function isSimpleRecord_Basic_List_Null(value: unknown): value is SimpleRecord_Basic_List_Null {
	return isRecord(value) &&
		(checkProp(value, 'valueBoolean', isNull) || checkProp(value, 'valueBoolean', createTypedArrayGuard(isBoolean))) &&
		(checkProp(value, 'valueShort', isNull) || checkProp(value, 'valueShort', createTypedArrayGuard(isNumber))) &&
		(checkProp(value, 'valueInt', isNull) || checkProp(value, 'valueInt', createTypedArrayGuard(isNumber))) &&
		(checkProp(value, 'valueLong', isNull) || checkProp(value, 'valueLong', createTypedArrayGuard(isNumber))) &&
		(checkProp(value, 'valueFloat', isNull) || checkProp(value, 'valueFloat', createTypedArrayGuard(isNumber))) &&
		(checkProp(value, 'valueDouble', isNull) || checkProp(value, 'valueDouble', createTypedArrayGuard(isNumber))) &&
		(checkProp(value, 'valueString', isNull) || checkProp(value, 'valueString', createTypedArrayGuard(isString))) &&
		(checkProp(value, 'valueLocalDate', isNull) || checkProp(value, 'valueLocalDate', createTypedArrayGuard(isString))) &&
		(checkProp(value, 'valueLocalDateTime', isNull) || checkProp(value, 'valueLocalDateTime', createTypedArrayGuard(isString))) &&
		(checkProp(value, 'valueZonedDateTime', isNull) || checkProp(value, 'valueZonedDateTime', createTypedArrayGuard(isString)));
}

export function SimpleRecord_Basic_List_NullFromJSON($value: Record<string, unknown>): SimpleRecord_Basic_List_Null {
	const valueBoolean = propListValue('valueBoolean', $value, isBoolean, 'null');
	const valueShort = propListValue('valueShort', $value, isNumber, 'null');
	const valueInt = propListValue('valueInt', $value, isNumber, 'null');
	const valueLong = propListValue('valueLong', $value, isNumber, 'null');
	const valueFloat = propListValue('valueFloat', $value, isNumber, 'null');
	const valueDouble = propListValue('valueDouble', $value, isNumber, 'null');
	const valueString = propListValue('valueString', $value, isString, 'null');
	const valueLocalDate = propListValue('valueLocalDate', $value, isString, 'null');
	const valueLocalDateTime = propListValue('valueLocalDateTime', $value, isString, 'null');
	const valueZonedDateTime = propListValue('valueZonedDateTime', $value, isString, 'null');
	return {
		valueBoolean,
		valueShort,
		valueInt,
		valueLong,
		valueFloat,
		valueDouble,
		valueString,
		valueLocalDate,
		valueLocalDateTime,
		valueZonedDateTime,
	};
}

export function SimpleRecord_Basic_List_NullToJSON($value: SimpleRecord_Basic_List_Null): Record<string, unknown> {
	const valueBoolean = $value.valueBoolean;
	const valueShort = $value.valueShort;
	const valueInt = $value.valueInt;
	const valueLong = $value.valueLong;
	const valueFloat = $value.valueFloat;
	const valueDouble = $value.valueDouble;
	const valueString = $value.valueString;
	const valueLocalDate = $value.valueLocalDate;
	const valueLocalDateTime = $value.valueLocalDateTime;
	const valueZonedDateTime = $value.valueZonedDateTime;

	return {
		valueBoolean,
		valueShort,
		valueInt,
		valueLong,
		valueFloat,
		valueDouble,
		valueString,
		valueLocalDate,
		valueLocalDateTime,
		valueZonedDateTime,
	};
}

