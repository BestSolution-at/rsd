// Generated by RSD - Do not modify
import { checkOptProp, checkProp, isBoolean, isNull, isNumber, isRecord, isString, propValue } from '../_type-utils.js';

export type PatchableRecord_Basic_Optional_Null = {
	readonly key: string;
	readonly version: string;
	readonly valueBoolean?: boolean | null;
	readonly valueShort?: number | null;
	readonly valueInt?: number | null;
	readonly valueLong?: number | null;
	readonly valueFloat?: number | null;
	readonly valueDouble?: number | null;
	readonly valueString?: string | null;
	readonly valueLocalDate?: string | null;
	readonly valueLocalDateTime?: string | null;
	readonly valueZonedDateTime?: string | null;
};

export function isPatchableRecord_Basic_Optional_Null(value: unknown): value is PatchableRecord_Basic_Optional_Null {
	return isRecord(value) &&
		checkProp(value, 'key', isString) &&
		checkProp(value, 'version', isString) &&
		(checkOptProp(value, 'valueBoolean', isNull) || checkOptProp(value, 'valueBoolean', isBoolean)) &&
		(checkOptProp(value, 'valueShort', isNull) || checkOptProp(value, 'valueShort', isNumber)) &&
		(checkOptProp(value, 'valueInt', isNull) || checkOptProp(value, 'valueInt', isNumber)) &&
		(checkOptProp(value, 'valueLong', isNull) || checkOptProp(value, 'valueLong', isNumber)) &&
		(checkOptProp(value, 'valueFloat', isNull) || checkOptProp(value, 'valueFloat', isNumber)) &&
		(checkOptProp(value, 'valueDouble', isNull) || checkOptProp(value, 'valueDouble', isNumber)) &&
		(checkOptProp(value, 'valueString', isNull) || checkOptProp(value, 'valueString', isString)) &&
		(checkOptProp(value, 'valueLocalDate', isNull) || checkOptProp(value, 'valueLocalDate', isString)) &&
		(checkOptProp(value, 'valueLocalDateTime', isNull) || checkOptProp(value, 'valueLocalDateTime', isString)) &&
		(checkOptProp(value, 'valueZonedDateTime', isNull) || checkOptProp(value, 'valueZonedDateTime', isString));
}

export function PatchableRecord_Basic_Optional_NullFromJSON($value: Record<string, unknown>): PatchableRecord_Basic_Optional_Null {
	const key = propValue('key', $value, isString);
	const version = propValue('version', $value, isString);
	const valueBoolean = propValue('valueBoolean', $value, isBoolean, 'optional_null');
	const valueShort = propValue('valueShort', $value, isNumber, 'optional_null');
	const valueInt = propValue('valueInt', $value, isNumber, 'optional_null');
	const valueLong = propValue('valueLong', $value, isNumber, 'optional_null');
	const valueFloat = propValue('valueFloat', $value, isNumber, 'optional_null');
	const valueDouble = propValue('valueDouble', $value, isNumber, 'optional_null');
	const valueString = propValue('valueString', $value, isString, 'optional_null');
	const valueLocalDate = propValue('valueLocalDate', $value, isString, 'optional_null');
	const valueLocalDateTime = propValue('valueLocalDateTime', $value, isString, 'optional_null');
	const valueZonedDateTime = propValue('valueZonedDateTime', $value, isString, 'optional_null');
	return {
		key,
		version,
		valueBoolean,
		valueShort,
		valueInt,
		valueLong,
		valueFloat,
		valueDouble,
		valueString,
		valueLocalDate,
		valueLocalDateTime,
		valueZonedDateTime,
	};
}

export function PatchableRecord_Basic_Optional_NullToJSON($value: PatchableRecord_Basic_Optional_Null): Record<string, unknown> {
	const key = $value.key;
	const version = $value.version;
	const valueBoolean = $value.valueBoolean;
	const valueShort = $value.valueShort;
	const valueInt = $value.valueInt;
	const valueLong = $value.valueLong;
	const valueFloat = $value.valueFloat;
	const valueDouble = $value.valueDouble;
	const valueString = $value.valueString;
	const valueLocalDate = $value.valueLocalDate;
	const valueLocalDateTime = $value.valueLocalDateTime;
	const valueZonedDateTime = $value.valueZonedDateTime;

	return {
		key,
		version,
		valueBoolean,
		valueShort,
		valueInt,
		valueLong,
		valueFloat,
		valueDouble,
		valueString,
		valueLocalDate,
		valueLocalDateTime,
		valueZonedDateTime,
	};
}

export type PatchableRecord_Basic_Optional_NullPatch = {
	readonly key: string;
	readonly version: string;
	readonly valueBoolean?: boolean | null;
	readonly valueShort?: number | null;
	readonly valueInt?: number | null;
	readonly valueLong?: number | null;
	readonly valueFloat?: number | null;
	readonly valueDouble?: number | null;
	readonly valueString?: string | null;
	readonly valueLocalDate?: string | null;
	readonly valueLocalDateTime?: string | null;
	readonly valueZonedDateTime?: string | null;
};

export function isPatchableRecord_Basic_Optional_NullPatch(value: unknown): value is PatchableRecord_Basic_Optional_NullPatch {
	return isRecord(value) &&
		checkProp(value, 'key', isString) &&
		checkProp(value, 'version', isString) &&
		(checkOptProp(value, 'valueBoolean', isNull) || checkOptProp(value, 'valueBoolean', isBoolean)) &&
		(checkOptProp(value, 'valueShort', isNull) || checkOptProp(value, 'valueShort', isNumber)) &&
		(checkOptProp(value, 'valueInt', isNull) || checkOptProp(value, 'valueInt', isNumber)) &&
		(checkOptProp(value, 'valueLong', isNull) || checkOptProp(value, 'valueLong', isNumber)) &&
		(checkOptProp(value, 'valueFloat', isNull) || checkOptProp(value, 'valueFloat', isNumber)) &&
		(checkOptProp(value, 'valueDouble', isNull) || checkOptProp(value, 'valueDouble', isNumber)) &&
		(checkOptProp(value, 'valueString', isNull) || checkOptProp(value, 'valueString', isString)) &&
		(checkOptProp(value, 'valueLocalDate', isNull) || checkOptProp(value, 'valueLocalDate', isString)) &&
		(checkOptProp(value, 'valueLocalDateTime', isNull) || checkOptProp(value, 'valueLocalDateTime', isString)) &&
		(checkOptProp(value, 'valueZonedDateTime', isNull) || checkOptProp(value, 'valueZonedDateTime', isString));
}

export function PatchableRecord_Basic_Optional_NullPatchFromJSON($value: Record<string, unknown>): PatchableRecord_Basic_Optional_NullPatch {
	const key = propValue('key', $value, isString);
	const version = propValue('version', $value, isString);
	const valueBoolean = propValue('valueBoolean', $value, isBoolean, 'optional_null');
	const valueShort = propValue('valueShort', $value, isNumber, 'optional_null');
	const valueInt = propValue('valueInt', $value, isNumber, 'optional_null');
	const valueLong = propValue('valueLong', $value, isNumber, 'optional_null');
	const valueFloat = propValue('valueFloat', $value, isNumber, 'optional_null');
	const valueDouble = propValue('valueDouble', $value, isNumber, 'optional_null');
	const valueString = propValue('valueString', $value, isString, 'optional_null');
	const valueLocalDate = propValue('valueLocalDate', $value, isString, 'optional_null');
	const valueLocalDateTime = propValue('valueLocalDateTime', $value, isString, 'optional_null');
	const valueZonedDateTime = propValue('valueZonedDateTime', $value, isString, 'optional_null');
	return {
		key,
		version,
		valueBoolean,
		valueShort,
		valueInt,
		valueLong,
		valueFloat,
		valueDouble,
		valueString,
		valueLocalDate,
		valueLocalDateTime,
		valueZonedDateTime,
	};
}

export function PatchableRecord_Basic_Optional_NullPatchToJSON($value: PatchableRecord_Basic_Optional_NullPatch): Record<string, unknown> {
	const key = $value.key;
	const version = $value.version;
	const valueBoolean = $value.valueBoolean;
	const valueShort = $value.valueShort;
	const valueInt = $value.valueInt;
	const valueLong = $value.valueLong;
	const valueFloat = $value.valueFloat;
	const valueDouble = $value.valueDouble;
	const valueString = $value.valueString;
	const valueLocalDate = $value.valueLocalDate;
	const valueLocalDateTime = $value.valueLocalDateTime;
	const valueZonedDateTime = $value.valueZonedDateTime;

	return {
		key,
		version,
		valueBoolean,
		valueShort,
		valueInt,
		valueLong,
		valueFloat,
		valueDouble,
		valueString,
		valueLocalDate,
		valueLocalDateTime,
		valueZonedDateTime,
	};
}

