// Generated by RSD - Do not modify
import { isUnion, type Union, UnionFromJSON, UnionToJSON } from './Union.js';
import { checkOptProp, checkProp, createTypedArrayGuard, isNull, isRecord, isUndefined, propMappedListValue, propMappedValue } from '../_type-utils.js';

export type RecordWithUnions = {
	readonly value: Union;
	readonly value_Null: Union | null;
	readonly value_Opt?: Union;
	readonly value_Opt_Null?: Union | null;
	readonly list: Union[];
	readonly list_Null: Union[] | null;
	readonly list_Opt?: Union[];
	readonly list_Opt_Null?: Union[] | null;
};

export function isRecordWithUnions(value: unknown): value is RecordWithUnions {
	return isRecord(value) &&
		checkProp(value, 'value', isUnion) &&
		(isNull(value.value_Null) || checkProp(value, 'value_Null', isUnion)) &&
		checkOptProp(value, 'value_Opt', isUnion) &&
		(isNull(value.value_Opt_Null) || checkOptProp(value, 'value_Opt_Null', isUnion)) &&
		checkProp(value, 'list', createTypedArrayGuard(isUnion)) &&
		(isNull(value.list_Null) || checkProp(value, 'list_Null', createTypedArrayGuard(isUnion))) &&
		checkOptProp(value, 'list_Opt', createTypedArrayGuard(isUnion)) &&
		(isNull(value.list_Opt_Null) || checkOptProp(value, 'list_Opt_Null', createTypedArrayGuard(isUnion)));
}

export function RecordWithUnionsFromJSON($value: Record<string, unknown>): RecordWithUnions {
	const value = propMappedValue('value', $value, isRecord, UnionFromJSON);
	const value_Null = propMappedValue('value_Null', $value, isRecord, UnionFromJSON, 'null');
	const value_Opt = propMappedValue('value_Opt', $value, isRecord, UnionFromJSON, 'optional');
	const value_Opt_Null = propMappedValue('value_Opt_Null', $value, isRecord, UnionFromJSON, 'optional_null');
	const list = propMappedListValue('list', $value, isRecord, UnionFromJSON);
	const list_Null = propMappedListValue('list_Null', $value, isRecord, UnionFromJSON, 'null');
	const list_Opt = propMappedListValue('list_Opt', $value, isRecord, UnionFromJSON, 'optional');
	const list_Opt_Null = propMappedListValue('list_Opt_Null', $value, isRecord, UnionFromJSON, 'optional_null');
	return {
		value,
		value_Null,
		value_Opt,
		value_Opt_Null,
		list,
		list_Null,
		list_Opt,
		list_Opt_Null,
	};
}

export function RecordWithUnionsToJSON($value: RecordWithUnions): Record<string, unknown> {
	const value = UnionToJSON($value.value);
	const value_Null = isNull($value.value_Null) ? null : UnionToJSON($value.value_Null);
	const value_Opt = isUndefined($value.value_Opt) ? undefined : UnionToJSON($value.value_Opt);
	const value_Opt_Null = isUndefined($value.value_Opt_Null) || isNull($value.value_Opt_Null) ? $value.value_Opt_Null : UnionToJSON($value.value_Opt_Null);
	const list = $value.list.map(UnionToJSON);
	const list_Null = isNull($value.list_Null) ? null : $value.list_Null.map(UnionToJSON);
	const list_Opt = isUndefined($value.list_Opt) ? undefined : $value.list_Opt.map(UnionToJSON);
	const list_Opt_Null = isUndefined($value.list_Opt_Null) || isNull($value.list_Opt_Null) ? $value.list_Opt_Null : $value.list_Opt_Null.map(UnionToJSON);

	return {
		value,
		value_Null,
		value_Opt,
		value_Opt_Null,
		list,
		list_Null,
		list_Opt,
		list_Opt_Null,
	};
}

