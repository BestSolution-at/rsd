// Generated by RSD - Do not modify
import { checkOptProp, checkProp, createTypedArrayGuard, isNull, isRecord, propListValue, propValue } from '../_type-utils.js';

type ValueEnum = 'A' | 'B';
type Value_NullEnum = 'C' | 'D';
type Value_OptEnum = 'E' | 'F';
type Value_Opt_NullEnum = 'G' | 'H';
type ListEnum = 'A' | 'B';
type List_NullEnum = 'C' | 'D';
type List_Opt_NullEnum = 'G' | 'H';

export function isEnumInlineRecord_Value(value: unknown): value is ValueEnum {
	return value === 'A' || value === 'B';
}

export function isEnumInlineRecord_Value_Null(value: unknown): value is Value_NullEnum {
	return value === 'C' || value === 'D';
}

export function isEnumInlineRecord_Value_Opt(value: unknown): value is Value_OptEnum {
	return value === 'E' || value === 'F';
}

export function isEnumInlineRecord_Value_Opt_Null(value: unknown): value is Value_Opt_NullEnum {
	return value === 'G' || value === 'H';
}

export function isEnumInlineRecord_List(value: unknown): value is ListEnum {
	return value === 'A' || value === 'B';
}

export function isEnumInlineRecord_List_Null(value: unknown): value is List_NullEnum {
	return value === 'C' || value === 'D';
}

export function isEnumInlineRecord_List_Opt_Null(value: unknown): value is List_Opt_NullEnum {
	return value === 'G' || value === 'H';
}

export type EnumInlineRecord = {
	readonly value: ValueEnum;
	readonly value_Null: Value_NullEnum | null;
	readonly value_Opt?: Value_OptEnum;
	readonly value_Opt_Null?: Value_Opt_NullEnum | null;
	readonly list: ListEnum[];
	readonly list_Null: List_NullEnum[] | null;
	readonly list_Opt_Null?: List_Opt_NullEnum[] | null;
};

export function isEnumInlineRecord(value: unknown): value is EnumInlineRecord {
	return isRecord(value) &&
		checkProp(value, 'value', isEnumInlineRecord_Value) &&
		(isNull(value.value_Null) || checkProp(value, 'value_Null', isEnumInlineRecord_Value_Null)) &&
		checkOptProp(value, 'value_Opt', isEnumInlineRecord_Value_Opt) &&
		(isNull(value.value_Opt_Null) || checkOptProp(value, 'value_Opt_Null', isEnumInlineRecord_Value_Opt_Null)) &&
		checkProp(value, 'list', createTypedArrayGuard(isEnumInlineRecord_List)) &&
		(isNull(value.list_Null) || checkProp(value, 'list_Null', createTypedArrayGuard(isEnumInlineRecord_List_Null))) &&
		(isNull(value.list_Opt_Null) || checkOptProp(value, 'list_Opt_Null', createTypedArrayGuard(isEnumInlineRecord_List_Opt_Null)));
}

export function EnumInlineRecordFromJSON($value: Record<string, unknown>): EnumInlineRecord {
	const value = propValue('value', $value, isEnumInlineRecord_Value);
	const value_Null = propValue('value_Null', $value, isEnumInlineRecord_Value_Null, 'null');
	const value_Opt = propValue('value_Opt', $value, isEnumInlineRecord_Value_Opt, 'optional');
	const value_Opt_Null = propValue('value_Opt_Null', $value, isEnumInlineRecord_Value_Opt_Null, 'optional_null');
	const list = propListValue('list', $value, isEnumInlineRecord_List);
	const list_Null = propListValue('list_Null', $value, isEnumInlineRecord_List_Null, 'null');
	const list_Opt_Null = propListValue('list_Opt_Null', $value, isEnumInlineRecord_List_Opt_Null, 'optional_null');
	return {
		value,
		value_Null,
		value_Opt,
		value_Opt_Null,
		list,
		list_Null,
		list_Opt_Null,
	};
}

export function EnumInlineRecordToJSON($value: EnumInlineRecord): Record<string, unknown> {
	const value = $value.value;
	const value_Null = $value.value_Null;
	const value_Opt = $value.value_Opt;
	const value_Opt_Null = $value.value_Opt_Null;
	const list = $value.list;
	const list_Null = $value.list_Null;
	const list_Opt_Null = $value.list_Opt_Null;

	return {
		value,
		value_Null,
		value_Opt,
		value_Opt_Null,
		list,
		list_Null,
		list_Opt_Null,
	};
}

